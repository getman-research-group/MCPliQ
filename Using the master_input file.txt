
////////////USING MASTER_INPUT.TXT////////////

This section explains the variables controlled by the user in master_input.txt, provides a general format to be followed, 
an example master_input.txt, and a compilation of common errors/mistakes and their solutions.

------------

****ATTENTION****
Every line  in master_input.txt has to have a value. 
No line can be left blank.

------------


	
							|General File Format|

							
Falling particles (1 or 0):
Resubmit (1 or 0):
Write LAMMPS file (1 or 0):
LAMMPS file extension: 
Input POSCAR name:
Number of different types of surface atoms:

Move attempt termination limit:
Maximum scaling factor:
Minimum scaling factor:
Minimum z-coordinate:
Maximum z-coordinate:

Move probabilities [%]
Translation: 
Rotation: 
Bond angle perturbation: 

Temperature [K]:
Anneal (1 or 0):
Initial temperature [K]:
Begin at iteration:
End at iteration:
Max iterations:
Maximum translation distance [A]: 

Number of different types of fluid molecules: 
NumMoleculeTypeA  filename.txt
...


------------
							
							
							|Walkthrough|
Line 1: "Falling particles" is a tag indicating what energy function MCPliQ will use. 
		Set this equal to 0 if you want to use the currently enabled quantum code, such as VASP.
		Set this equal to 1 if you want to use the falling particles energy function for testing purposes.
		
		The "falling particles" energy function is described in READ_FIRST.txt.
		
		####For testing, keep this equal to 1.
							
Line 2- "Resubmit" is a tag indicating whether or not the current job is a resubmission of an earlier job which finished.
		If you don't intend to run a resubmission job, set Resubmit to 0 (that's a zero)
		If you intend to run a resubmission job, set Resubmit to 1
		
		####Keep this equal to 0 for non-resubmission jobs, and equal to 1 for resubmission jobs.

Line 3- "Write LAMMPS file" gives the user the option to produce a LAMMPS data file for the initial configuration 
		generated by MCPliQ.
		
		####Set this equal to 1 to generate a LAMMPS data file. Keep it set to 0 otherwise.
		
Line 4- "LAMMPS file extension" gives the user the option to add a custom tag to the LAMMPS data file, if they choose
		to have one generated. Never leave this blank, otherwise the program will misread and crash.
		
		####ALWAYS have this line filled, even if a LAMMPS file won't be written. If it's left blank, the program will crash.
		####ALWAYS lead with a period (ex: .txt). This point isn't as big a deal, as the file name will just 
			be lacking a period.
		####Recommended default value: .txt
							
Line 5- "Input POSCAR name" refers to the actual file name of the first POSCAR to be used by the Monte Carlo Plug-in for Quantum Methods (MCPliQ)
		This does not include the path through any directories (i.e., D://Input_Files/)
		
		####For the included surface POSCAR, this line would be: Pt_test.POSCAR
		
Line 6- "Number of different types of surfaces atoms" is asking for the number of elements in the input POSCAR.
		For example, the value for a pure platinum surface is 1, while the value for a TiAuO surface will be 3.
		If this value doesn't match your surface, the program will crash immediately.
		
		####For the included surface POSCAR, this line would be: 1
		(The surface only contains one element)
		
Line 7- Skip a line
		
		
Line 8- "Move attempt termination limit" allows the user to specify the number of failed move attempts necessary to cue MCPliQ
		to begin the termination procedure. For example, if this value is set to 100, and the current move has been attempted and failed
		100 times, MCPliQ stops attempting moves and begins producing the final output files before ending the simulation.
		This basically defines the maximum possible amount of time wasted.
		
		####For quantum energy functions, such as VASP, I keep this set to 50 or below.
		####For the falling particles energy function, keeping this set to a larger value, such as 1000,
		    will allow for more moves to be made while not taking an inordinate amount of time.
		
Line 9- "Maximum scaling factor" is a constant used to alter the maximum allowable distances between fluid molecules, 
		other fluid molecules, and the surface itself. 
		The maximum allowable distance is calcualted by summing the van der Waals radii of the two atoms in question
		to produce a value called "vdw_distance". This value is then multplied by the scaling factor to calculated the actual maximum distance.
		Maximum_distance = vdw_distance * max_scaling_factor
		
		Significantly altering this value can be useful. For example, if you'd like to be able to place fluid molecules very far
		away from the surface, significantly increasing this value will allow for that.
		
		####I keep this equal to a value between 0.7 and 1.5
		
		
		****Keep in mind that there is a lower bound for this variable, with respect to the minimum scaling factor, below which 
		particle placement becomes impossible. This is gone over in more detail in the provided Excel file.
		
		*****Vdw and covalent radii are available in the vdw_and_covalent.txt and Minimum_and_maximum_distances.xlsx files*****
		
Line 10- "Minimum scaling factor" is a constant used to alter the minimum allowable distances between fluid molecules,
		other fluid molecules, and the surface itself.
		The minimum allowable distance is calcualted by summing the covalent radii of the two atoms in question
		to produce a value called "covalent_distance". This value is then multplied by the scaling factor to calculated the actual minimum distance.
		Minimum_distance = covalent_distance * min_scaling_factor
		
		Setting this variable to 0 will allow for overlap between placed molecules and other atoms in the simulation.		
		
		
		####I keep this equal to a value between 0.7 and 1.5
		
		****Keep in mind that there is an upper bound for this variable, with respect to the maximum scaling factor, above which 
		particle placement becomes impossible. This is gone over in more detail in the provided Excel file.
		
		*****Vdw and covalent radii are available in the vdw_and_covalent.txt and Minimum_and_maximum_distances.xlsx files*****
		
Line 11- "Minimum z_coordinate" allows the user to specify the lower bound on the (input POSCAR's z-axis) for fluid molecule placement.
		 All atoms placed by MCPliQ will be above this lower boundary.
		 This is specified in Cartesian, not fractional, coordinates.
		 
		 ####This value should be no lower than 0.
		 I generally keep this value between about 1 or 2 Angstroms above the top of the current surface.

Line 12- "Maximum z-coordinate" allows the user to specify the upper bound (on the input POSCAR's z-axis) for fluid molecule placement.
		 All atoms placed by MCPliq wil lbe below this upper boundary.
		 This is specified in Cartesian, not fractional, coordinates.
		 
		 ####This value should be no higher than the input POSCAR's unit cell.
		 
Line 13- Skip a line

Line 14- This is a header line

line 15- "Translation" allows the user to set the percent chance of a translation move being selected for any given move.

Line 16- "Rotation" allows the user to set the percent chance of a rotation move being selected for any given move.

Line 17- "Bond angle perturbation" allows the user to set the percent chance of a bond angle perturbation move being selected for any given move.

**** The values of lines 15 to 17 must sum to 100%!
		
Line 18- Skip a line
		
Line 19- "Temperature" refers to the system temperature, in Kelvin. This temperature is used to make decisions during 
		 the Monte Carlo move/replacement routine. The higher the temperature, the higher the average system energy at convergence.
		 A higher temperature also means more move attempts will be accepted, so this boosts the efficiency of the method somewhat.
		 At higher temperatures, such as 3000 K, convergence may be difficult to find.
		 
		 ####I usually keep this equal to anywhere between 300 and 4000. 
		 
Line 20- "Anneal" gives the user the option to use a simple annealing simulation with a linear temperature decrease.
	
		####Set this equal to 0 for a constant temperature.
			Set this equal to 1 to use the annealing option.
			In either case, be sure to specify the next three lines, as well, so MCPliQ doesn't misread and crash.

Line 21- "Initial temperature" refers to the initial temperature used for simulated annealing, in Kelvin.

		####I keep this equal to anywhere between 1000 and 3000
		
Line 22- "Begin at iteration" allows the user to specify which iteration annealing should begin.

		####I keep this equal to 0
		
Line 23- "End at iteration" allows the user to specify which iteration the annealing should end.

		####I keep this equal to about 80% of the "Max iterations" value.
		####ALWAYS make sure this is less than "Max iterations"

Line 24- "Max iterations" refers to the maximum allowable number of ACCEPTED moves the system 
		 can undergo before the simulation will be terminated. Once the routine used to detect convergence is implemented, this can be 
		 set to an appropriately high value to allow for a high likelihood of convergence without allowing an unnecessarily high amount of computation.
		 
		 The ratio of rejected to accepted runs will depend on the other system parameters (temperature, maximum translation distance, and probability of rotation, mostly)
		 as well as the current stability of the system. If the simulation is starting from a converged configuration, accepted iterations will be few and far between at lower temperatures.
		 
		 ####I'd recommend starting out with 10 iterations as the maximum and seeing how quickly this finishes for a given system.
		 
		
Line 25- "Maximum translation distance" is the maximum allowable distance a molecule can be translated during the Monte Carlo replacement routine.
		 In general, translation distances will randomly vary between 0 and this user-specified value.
		 
		 Experiment with this value. A larger value will allow for an easier escape of a minimum, 
		 but too large of a value can prevent MCPliQ from accepting many moves for some systems.
		 
		 ####I keep this equal to between 0.5 and 2.0
		 
		 
Line 26- Skip a line

Line 27- "Number of different types of fluid molecules" is asking for the maximum number of different fluid molecule types
		 that MCPliQ should attempt to place. If there isn't room for any additional molecules, MCPliQ may terminate molecule placement
		 without placing the requested number of instances of the requested number of fluid molecules.

Lines 28 and on- These lines are used to specify the file names of all molecular internal coordinates files (discussed later),
				 as well as the maximum number of each molecule type to be placed. The format is shown above, and an example is shown below.
				 Molecules that are listed first are placed first.
				 
------------
							
							
							|Example master_input.txt|
							
					The following is an example master_input.txt file set up for bulk random water placement around the supplied 18x18x3 Pt surface (POSCAR_pt18183nh3.txt)
							
							
							
Falling particles (1 or 0): 1
Resubmit (1 or 0): 0
Write LAMMPS file (1 or 0): 1
LAMMPS file extension: .water
Input POSCAR name: POSCAR_pt18183nh3.txt
Number of different types of surface particles: 3

Move attempt termination limit: 1000
Maximum scaling factor: 100
Minimum scaling factor: 1.1
Minimum z-coordinate: 6
Maximum z-coordinate: 48

Move probabilities [%]
Translation: 100
Rotation: 0
Bond angle perturbation: 0

Temperature [K]: 300
Anneal (1 or 0): 0
Initial temperature [K]: 1000
Begin at iteration: 0
End at iteration: 80
Max iterations: 0
Maximum translation distance [A]: 2.0

Number of different types of fluid molecules: 1
2400 water.txt



------------
		

							|Common Errors/Mistakes and their Solutions|
							

1) Fluid molecules are getting too close to or too far from the surface/other fluid molecules

	The user can directly control the minimum and maximum distances between fluid molecules and other fluid molecules as well as 
	those between fluid molecules and the surface. This can be done by changing the minimum scaling factor and maximum scaling 
	factor in master_input.txt. An accessory file has been provided to make choosing the correct scaling factors easier. The file
	is called "Minimum_and_maximum_distances.xlsx", and a short write-up has been provided in the file itself on the right side of sheet 1.
	
	
2) Incorrect number of surface atom types
	
	If a surface with two atom types is used, and line 2 (Number of different types of surface atoms) isn't set to 2,
	an error will occur during the read_POSCAR() function, and the program will freeze or crash. This is really easy to overlook,
	so always make sure this value is correctly set.
	
	
3) Zone min/max incorrectly set up for surface (too high / too low)
	
	If the minimum and/or maximum heights are set up incorrectly for the current surface, molecule placement may not happen at all,
	or it may happen in a way that's not constructive. Make sure the range of allowable placement heights will work for your surface.
	

4) Rotation with single atoms only
	
	If only single atoms are being placed and only rotation is enabled, nothing will happen. Set "Probability of rotation" to 0 to avoid this.
	

5) Molecule placement made impossible by max/min scaling factor ratio

	For every atom pair, there is a certain value of the min_scale/max_scale ratio above which atom placement becomes impossible.
	This occurs when the minimum allowable distance becomes larger than the maximum allowable distance. The min_scale/max_scale ratios
	can be calculated using the Minimum_and_maximum_distances.xlsx file.
	

6) pdb/POSCAR shared atom order mismatch error can be discussed in the internal coordinates file section

	This doesn't have to do with master_input.txt directly, but for now it's still a big enough bug to mention twice.
	If the surface and a fluid molecule have one or more of the same elements, the atom order in the surface's POSCAR
	and the fluid molecule's internal coordinates file must match, or else the rotation/translation moves may not happen correctly.
	What may happen instead is an unnecessary translation during a rotation move, or, during a translation move, two atoms in a molecule may
	switch places (Ex: H-O-H becomes H-H-O)
	This has to do with an as-of-yet unresolved error that's most likely in the replacement_sorter() function.
	
	For example, if the surface is a water surface, the fluid molecule is water, and the POSCAR's atom order is O H
	water's internal coordinates file (for fluid molecule placement) must have an atom order of O H, too.
	I haven't found a single pattern for when this occurs, but if either of the two errors described above occur,
	rearrange the atom order of either the POSCAR (easier) or the fluid molecule's internal coordinates file (harder, especially for anything larger than ~4 or 5 atoms).
	
	
	
	*******Because of this, always use the built-in "falling particles" energy function to test a specific system before moving on to VASP
	or any other software.*******
		
		
		



